/*********************************************************************
* Copyright (c) 10.10.2023 Thomas Zierer
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
**********************************************************************/
package de.tgmz.zdev.editor.pli;

import java.util.LinkedList;
import java.util.List;

import de.tgmz.zdev.editor.ZdevCompletionProposal;

/**
 * PL/I key words. enum to identify doubles quickly.
 */
public enum ReservedWord {
	XMLATTR("The XMLATTR attribute indicates that the field is presented as an attribute of its \r\n"
			+ "containing structure in the XML output that is generated by XMLCHAR.\r\n"
			+ "XMLATTR is invalid with any of the following elements:\r\n"
			+ "\u2022 Arrays\r\n"
			+ "\u2022 Structures or unions\r\n"
			+ "\u2022 Unnamed structure elements\r\n"
			+ "\u2022 A structure element that is used previously with the same parent but without\r\n"
			+ "the XMLATTR attribute"),
	XMLOMIT("The XMLOMIT attribute indicates that the field must be omitted from the XML\r\n"
			+ "output that is generated by XMLCHAR if the field is either of the following data\r\n"
			+ "items:\r\n"
			+ "\u2022 A string that compares equal to the null string (' ')\r\n"
			+ "\u2022 A number that compares equal to 0\r\n"
			+ "XMLOMIT is invalid with any of the following elements:\r\n"
			+ "\u2022 Structures or unions\r\n"
			+ "\u2022 Unnamed structure elements\r\n"
			+ "\u2022 Elements that use non-native float (hex or dfp on Windows)"),
	DCL,
	DECLARE,
	DEFINE,
	STRUCTURE,
	INIT,
	VALUE,
	BIN,
	BINARY,
	DEC,
	DECIMAL,
	FIXED,
	FLOAT,
	CHAR,
	CHARACTER,
	PIC,
	PICTURE,
	BIT,
	PTR,
	POINTER,
	ALIGNED,
	UNAL,
	UNALIGNED,
	NONASGN,
	NONASSIGNABLE,
	STATIC,
	AUTO,
	AUTOMATIC,
	BASED,
	LIKE,
	DEF,
	DEFINED,
	BUILTIN,
	PROC,
	PROCEDURE,
	LIMITED,
	ENTRY,
	EXT,
	EXTERNAL,
	OPTIONS,
	FETCH,
	CALL,
	GOTO,
	PUT,
	SKIP,
	LIST,
	EDIT,
	BEGIN,
	END,
	RETURN,
	RETURNS,
	SELECT,
	WHEN,
	OTHER,
	OTHERWISE,
	DO,
	WHILE,
	IF,
	THEN,
	ELSE,
	FILE,
	RECORD,
	SEQL,
	STREAM,
	INPUT,
	OUTPUT,
	PRINT,
	VARYING,
	;

	private String completionProposal;

	private ReservedWord() {
		this(null);
	}
	
	private ReservedWord(String completionProposal) {
		this.completionProposal = completionProposal;
	}
	public static ZdevCompletionProposal[] getCompletionProposals() {
		List<ZdevCompletionProposal> l = new LinkedList<>();
		
		for (ReservedWord rw : values()) {
			String cp = rw.getCompletionProposal();
			
			l.add(new ZdevCompletionProposal(rw.toString(), rw.toString(), cp != null ? cp : rw.toString()));
		}
		
		return l.toArray(new ZdevCompletionProposal[l.size()]);
	}

	public String getCompletionProposal() {
		return completionProposal;
	}
}
